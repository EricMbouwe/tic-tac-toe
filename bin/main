#!/usr/bin/env ruby

require_relative '../lib/player'
require_relative '../lib/game'

game = Game.new
player1 = game.add_player
player2 = game.add_player

fakeboard = [
  ['-------------'],
  ['|', ' 1 ', '|', ' 2 ', '|', ' 3 ', '|'],
  ['-------------'],
  ['|', ' 4 ', '|', ' 5 ', '|', ' 6 ', '|'],
  ['-------------'],
  ['|', ' 7 ', '|', ' 8 ', '|', ' 9 ', '|'],
  ['-------------']
]

puts 'Welcome to the Tic Tac Toe game'
puts 'I hope that you will have fun ):'

puts "\nPlayer 1, enter your name please"
name1 = gets.chomp.gsub(/\s+/, '')
while name1 == ''
  puts 'Not a valid name, enter your name please'
  name1 = gets.chomp.gsub(/\s+/, '')
end
player1.name = name1

puts "\nPlayer 2, enter your name please"
name2 = gets.chomp.gsub(/\s+/, '')
while name2 == ''
  puts 'Not a valid name, enter your name please'
  name2 = gets.chomp.gsub(/\s+/, '')
end
player2.name = name2

puts "\n#{name1.capitalize} choose 'X' or 'O'"
sym1 = gets.chomp
until sym1.include?('X') || sym1.include?('O')
  puts "wrong value, choose 'X' or 'O'."
  sym1 = gets.chomp
end
game.choose_symbol(sym1, player1, player2)
sym2 = player2.sym

puts "\nCool! #{name1.capitalize}'s move is represented by '#{sym1}'
      and #{name2.capitalize}'s move is represented by '#{sym2}'."
puts "\nNow, choose a number on the board to make your move\n\n"

game.display_board(fakeboard)

current_player = player1
count = 0
keepgoing = true

while keepgoing
  puts "\n#{current_player.name.capitalize}, make your move"
  pos = gets.chomp.to_i
  while game.bad_play(pos, player1, player2)
    puts game.invalid_move if game.check_move(pos)
    puts game.invalid_position if game.position_taken(pos, player1, player2)
    pos = gets.chomp.to_i
  end

  current_player.move(game.board, pos, current_player.sym)
  puts 'Now your move is displayed on the board !'
  game.display_board(game.board)
  result = game.winner(game.winning, current_player)
  if result.length.positive?
    puts result
    keepgoing = false
  end

  count += 1
  current_player = current_player == player1 ? player2 : player1
  return puts 'Draw Game' if count == 9 && !result.length.positive?
end
